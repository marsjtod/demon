{
	"name": "Docker from Docker",
	"dockerFile": "Dockerfile",
	"runArgs": ["--init"],

	"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
		"source=e:/data,target=/data,type=bind,consistency=cached",
		"source=e:/raw-data,target=/raw-data,type=bind,consistency=cached"
	 ],

	 "workspaceMount": "source=${localWorkspaceFolder},target=/workspace/demon-sfm,type=bind,consistency=delegated",
	 "workspaceFolder": "/workspace/demon-sfm",
	
	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-azuretools.vscode-docker"
	],

	// mars added
	

	"build": {
		"args": {
			"INSTALL_ZSH": "false"
		}
	}

	
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "docker --version",

	// Uncomment the next two lines to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "overrideCommand": false,
	// "remoteUser": "vscode"
}